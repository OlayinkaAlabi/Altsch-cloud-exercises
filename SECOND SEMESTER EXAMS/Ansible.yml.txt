---
- name: Server Setup
  hosts: host
  remote_user: root
​
​
  vars:
    mysql_pass: root
​
​
  tasks:
    - name: set timezone
      shell: timedatectl set-timezone Africa/Lagos
​
    - name: set hostname
      shell: hostnamectl set-hostname server.olayinkaalabi.me
​
    - name: Check update
      shell: apt update -y && apt upgrade -y
​
    - name: install pip
      shell: apt install python3-pip -y
​
    - name: install pymysql
      shell: python3 -m pip install PyMySQL
​
    - name: install cryptography
      shell: pip install cryptography
​
    - name: install git
      shell: apt install git -y
​
    - name: install some packages
      apt:
        name: lsb-release, ca-certificates, apt-transport-https, software-properties-common, gnupg2, curl, wget, debconf-utils, libaio1
​
    - name: install apache
      apt:
        name: apache2, apache2-utils
​
    - name: add php repo
      apt_repository:
        repo: ppa:ondrej/php
​
    - name: check update
      shell: apt update -y && apt upgrade -y
​
    - name: install php
      apt:
        name: php8.1-fpm, libapache2-mod-php8.1, php8.1-cli, php8.1-common, php8.1-mysql, php8.1-opcache, php8.1-soap, php8.1-zip, php8.1-intl, php8.1-bcmath, php8.1-xml, php8.1-xmlrpc, php8.1-curl, php8.1-gd, php8.1-imagick, php8.1-cli, php8.1-dev, php8.1-imap, php8.1-mbstring
​
    - name: install composer 1
      shell: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
​
    - name: install composer 2
      shell: php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
​
    - name: install composer 3
      shell: php composer-setup.php
​
    - name: install composer 4
      shell: php -r "unlink('composer-setup.php');"
​
    - name: install composer 5
      shell: mv composer.phar /usr/local/bin/composer
​
    - name: install mysql 1
      shell:
        debconf-set-selections <<EOF
        mysql-apt-config mysql-apt-config/select-server select mysql-8.0
        "mysql-community-server mysql-community-server/root-pass password {{ mysql_pass }}"
        "mysql-community-server mysql-community-server/re-root-pass password {{ mysql_pass }}"
        EOF
​
    - name: install mysql 2
      shell: wget --user-agent="Mozilla" -O /tmp/mysql-apt-config_0.8.24-1_all.deb https://dev.mysql.com/get/mysql-apt-config_0.8.24-1_all.deb
​
    - name: install mysql 3
      shell: DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config_0.8.24-1_all.deb < /dev/null > /dev/null
​
    - name: check update
      shell: apt update -y && apt upgrade -y
​
    - name: install mysql 4
      shell: DEBIAN_FRONTEND=noninteractive apt-get install mysql-server mysql-client --assume-yes --force-yes < /dev/null > /dev/null
​
    - name: create mysql database
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - CREATE DATABASE laraveldb;
​
    - name: create mysql user and password
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - CREATE USER 'laravel'@'localhost' IDENTIFIED BY 'laravel';
​
    - name: grant privileges
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - GRANT ALL PRIVILEGES ON laraveldb.* TO 'laravel'@'localhost';
​
    - name: flush privileges
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - FLUSH PRIVILEGES;
​
    - name: copy postgresql script to slave machine
      copy:
        src: /home/vagrant/postgresql.sh
        dest: /root
        mode: '0775'
​
    - name: run bash script
      command: bash /root/postgresql.sh
​
    - name: clone laravel project
      shell: git clone https://github.com/f1amy/laravel-realworld-example-app.git /var/www/laravel
​
    - name: set env file
      copy:
        dest: /var/www/laravel/.env
        content: |
          APP_NAME="Laravel App"
          APP_ENV=local
          APP_KEY=
          APP_DEBUG=true
          APP_URL=https://olayinkaalabi.me
          APP_PORT=3000
​
          LOG_CHANNEL=stack
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug
​
          DB_CONNECTION=mysql
          DB_HOST=localhost
          DB_PORT=3306
          DB_DATABASE=laraveldb
          DB_USERNAME=laravel
          DB_PASSWORD=laravel
​
          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=file
          SESSION_LIFETIME=120
​
          MEMCACHED_HOST=127.0.0.1
​
          REDIS_HOST=127.0.0.1
          REDIS_PASSWORD=null
          REDIS_PORT=6379
​
          MAIL_MAILER=smtp
          MAIL_HOST=mailhog
          MAIL_PORT=1025
          MAIL_USERNAME=null
          MAIL_PASSWORD=null
          MAIL_ENCRYPTION=null
          MAIL_FROM_ADDRESS="hello@example.com"
          MAIL_FROM_NAME="${APP_NAME}"
​
          AWS_ACCESS_KEY_ID=
          AWS_SECRET_ACCESS_KEY=
          AWS_DEFAULT_REGION=us-east-1
          AWS_BUCKET=
          AWS_USE_PATH_STYLE_ENDPOINT=false
​
          PUSHER_APP_ID=
          PUSHER_APP_KEY=
          PUSHER_APP_SECRET=
          PUSHER_APP_CLUSTER=mt1
​
          MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
          MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
​
          L5_SWAGGER_GENERATE_ALWAYS=true
          SAIL_XDEBUG_MODE=develop,debug
          SAIL_SKIP_CHECKS=true
​
    - name: create laravel frontend
      blockinfile:
        path: /var/www/laravel/routes/web.php
        marker: ""
        block: |
          Route::get('/', function () {
            return view('welcome');
          });
​
    - name: create htaccess
      copy:
        dest: "/var/www/laravel/.htaccess"
        content: |
          <IfModule mod_rewrite.c>
            RewriteEngine On
​
            RewriteCond %{REQUEST_URI} !^/public/
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_FILENAME} !-f
​
            RewriteRule ^(.*)$ /public/$1
            RewriteRule ^(/)?$ public/index.php [L]
          </IfModule>
​
    - name: set project owner
      shell: chown -R root:root /var/www/laravel
​
    - name: set folder permission
      shell: chmod -R 0775 /var/www/laravel
​
    - name: set folder permission
      shell: chown -R 0755 /var/www/laravel/storage
​
    - name: set folder permission
      shell: chown -R 0755 /var/www/laravel/bootstrap/cache
​
    - name: run composer
      shell: cd /var/www/laravel && composer create-project -n
​
    - name: run migration
      shell:
        cmd: cd /var/www/laravel && php artisan migrate --seed
​
    - name: create virtualhost
      copy:
        dest: "/etc/apache2/sites-available/laravel.conf"
        content: |
          <VirtualHost *:80>
              ServerAdmin hello@olayinkaalabi.me
              ServerName olayinkaalabi.me
              ServerAlias olayinkaalabi.me
​
              DocumentRoot /var/www/olayinkaalabi.me/public
​
              <Directory /var/www/laravel.me/public>
                  Options Indexes FollowSymLinks
                  AllowOverride All
                  Require all granted
              </Directory>
​
              ErrorLog ${APACHE_LOG_DIR}/error.log
              CustomLog ${APACHE_LOG_DIR}/access.log combined
          </VirtualHost>
​
    - name: disable default apache site
      shell: a2dissite 000-default.conf
​
    - name: enable project virtualhost config
      shell: a2ensite laravel.conf
​
    - name: enable mod_rewrite
      shell: a2enmod rewrite
​
    - name: restart apache
      service:
        name: apache2
        state: restarted
​
    - name: change folder owner to apache
      shell: chown -R www-data:www-data /var/www/laravel.me
​
    - name: install ssl 1
      apt:
        name:
          - snapd
​
    - name: install ssl 2
      shell: snap install core
​
    - name: install ssl 3
      shell: snap refresh core
​
    - name: install ssl 4
      shell: snap install --classic certbot
​
    - name: install ssl 5
      shell: ln -s /snap/bin/certbot /usr/bin/certbot
​
    - name: install ssl 6
      shell: yes | certbot --apache --agree-tos --redirect -m hello@olayinkaalabi.me -d olayinkaalabi.me









